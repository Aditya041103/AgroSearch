MongoDB Connected
Query {
  _mongooseOptions: {},
  _transforms: [],
  _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },
  _executionStack: null,
  mongooseCollection: Collection {  
    collection: Collection { s: [Object], client: [MongoClient] },      
    Promise: [Function: Promise],   
    modelName: 'User',
    _closed: false,
    opts: {
      autoIndex: true,
      autoCreate: true,
      autoSearchIndex: false,       
      schemaUserProvidedOptions: {},
      capped: false,
      Promise: undefined,
      '$wasForceClosed': undefined  
    },
    name: 'users',
    collectionName: 'users',        
    conn: NativeConnection {        
      base: [Mongoose],
      collections: [Object],        
      models: [Object],
      config: {},
      replica: false,
      options: null,
      otherDbs: [],
      relatedDbs: {},
      states: [Object: null prototype],
      _readyState: 1,
      _closeCalled: undefined,      
      _hasOpened: true,
      plugins: [],
      id: 0,
      _queue: [],
      _listening: false,
      _lastHeartbeatAt: null,       
      _connectionOptions: [Object], 
      _connectionString: 'mongodb+srv://adi04:L6gkchXj0e6i8QQj@agri.60ahw.mongodb.net/?retryWrites=true&w=majority&appName=Agri',
      client: [MongoClient],        
      '$initialConnection': [Promise],
      db: [Db],
      host: 'agri-shard-00-00.60ahw.mongodb.net',
      port: 27017,
      name: 'test',
      [Symbol(mongoose:defaultConnection)]: true
    },
    queue: [],
    buffer: false,
    emitter: EventEmitter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,     
      [Symbol(shapeMode)]: false,   
      [Symbol(kCapture)]: false     
    }
  },
  model: Model { User },
  schema: Schema {
    obj: {
      email: [Function: String],    
      password: [Function: String], 
      name: [Function: String],     
      phone: [Function: String],    
      address: [Function: String]   
    },
    paths: {
      email: [SchemaString],        
      password: [SchemaString],     
      name: [SchemaString],
      phone: [SchemaString],        
      address: [SchemaString],      
      _id: [SchemaObjectId],        
      __v: [SchemaNumber]
    },
    aliases: {},
    subpaths: {},
    virtuals: { id: [VirtualType] },
    singleNestedPaths: {},
    nested: {},
    inherits: {},
    callQueue: [],
    _indexes: [],
    _searchIndexes: [],
    methods: {},
    methodOptions: {},
    statics: {},
    tree: {
      email: [Function: String],    
      password: [Function: String], 
      name: [Function: String],     
      phone: [Function: String],    
      address: [Function: String],  
      _id: [Object],
      __v: [Function: Number],      
      id: [VirtualType]
    },
    query: {},
    childSchemas: [],
    plugins: [ [Object], [Object], [Object], [Object], [Object] ],      
    '$id': 3,
    mapPaths: [],
    s: { hooks: [Kareem] },
    _userProvidedOptions: {},       
    options: {
      strict: true,
      strictQuery: false,
      bufferCommands: true,
      capped: false,
      versionKey: '__v',
      optimisticConcurrency: false, 
      minimize: true,
      autoIndex: null,
      discriminatorKey: '__t',      
      shardKey: null,
      read: null,
      validateBeforeSave: true,     
      validateModifiedOnly: false,  
      _id: true,
      id: true,
      typeKey: 'type',
      pluralization: true
    },
    '$globalPluginsApplied': true,  
    _requiredpaths: []
  },
  op: 'findOne',
  options: {},
  _conditions: { _id: '67af72962038560268474b1c' },
  _fields: undefined,
  _updateDoc: undefined,
  _path: undefined,
  _distinctDoc: undefined,
  _collection: NodeCollection {     
    collection: Collection {        
      collection: [Collection],     
      Promise: [Function: Promise], 
      modelName: 'User',
      _closed: false,
      opts: [Object],
      name: 'users',
      collectionName: 'users',      
      conn: [NativeConnection],     
      queue: [],
      buffer: false,
      emitter: [EventEmitter]       
    },
    collectionName: 'users'
  },
  _traceFunction: undefined,        
  '$useProjection': true